<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="sportlobster.api.manager.user.class">Sportlobster\ApiBundle\Manager\UserManager</parameter>
        <parameter key="sportlobster.api.manager.news.class">Sportlobster\ApiBundle\Manager\NewsManager</parameter>
        <parameter key="sportlobster.api.doctrine.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
        <parameter key="sportlobster.api.doctrine.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
        <parameter key="sportlobster.api.user.cache.configuration.class">Sportlobster\ApiBundle\Cache\UserCacheConfiguration</parameter>
        <parameter key="sportlobster.api.news.cache.configuration.class">Sportlobster\ApiBundle\Cache\NewsCacheConfiguration</parameter>
        <parameter key="sportlobster.api.entity.repository.user.class">Sportlobster\ApiBundle\Entity\UserRepository</parameter>
        <parameter key="sportlobster.api.entity.repository.news.class">Sportlobster\ApiBundle\Entity\NewsRepository</parameter>
        <parameter key="sportlobster.api.memcached.class">Memcached</parameter>
        <parameter key="sportlobster.api.memcached.host">localhost</parameter>
        <parameter key="sportlobster.api.memcached.port">11211</parameter>
        <parameter key="sportlobster.api.doctrine.table_prefix.class">Sportlobster\ApiBundle\EventSubscriber\TablePrefixSubscriber</parameter>
    </parameters>
    
    <services>
        <service id="sportlobster.api.doctrine.table_prefix" class="%sportlobster.api.doctrine.table_prefix.class%">
            <argument>%database_table_prefix%</argument>
            <tag name="doctrine.event_subscriber"></tag>
        </service>
        
        <service id="sportlobster.api.memcached" class="%sportlobster.api.memcached.class%">
            <call method="addServer">
                <argument>%sportlobster.api.memcached.host%</argument>
                <argument>%sportlobster.api.memcached.port%</argument>
            </call>
        </service>
        <service id="sportlobster.api.doctrine.cache.memcached" class="%sportlobster.api.doctrine.cache.memcached.class%">
            <call method="setMemcached">
                <argument type="service" id="sportlobster.api.memcached" />
            </call>
        </service>
        <service id="sportlobster.api.doctrine.cache.array" class="%sportlobster.api.doctrine.cache.array.class%">
        </service>
        
        <service id="sportlobster.api.user.cache.configuration" class="%sportlobster.api.user.cache.configuration.class%">
        </service>
        <service id="sportlobster.api.news.cache.configuration" class="%sportlobster.api.news.cache.configuration.class%">
        </service>
        
        <service id="sportlobster.api.entity.repository.user" class="%sportlobster.api.entity.repository.user.class%" factory-service="doctrine.orm.entity_manager" factory-method="getRepository">
            <argument>SportlobsterApiBundle:User</argument>
        </service>
        <service id="sportlobster.api.entity.repository.news" class="%sportlobster.api.entity.repository.news.class%" factory-service="doctrine.orm.entity_manager" factory-method="getRepository">
            <argument>SportlobsterApiBundle:News</argument>
        </service>
        
        <service id="sportlobster.api.manager.user" class="%sportlobster.api.manager.user.class%">
            <argument type="service" id="sportlobster.api.entity.repository.user" />
            <argument type="service" id="sportlobster.api.doctrine.cache.memcached" />
            <argument type="service" id="sportlobster.api.user.cache.configuration" />
        </service>
        <service id="sportlobster.api.manager.news" class="%sportlobster.api.manager.news.class%">
            <argument type="service" id="sportlobster.api.entity.repository.news" />
            <argument type="service" id="sportlobster.api.doctrine.cache.memcached" />
            <argument type="service" id="sportlobster.api.news.cache.configuration" />
            <argument type="service" id="stof_doctrine_extensions.uploadable.manager" />
        </service>
    </services>
</container>
